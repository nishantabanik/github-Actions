# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: 
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2                 ## Code Checkout
    - name: Bump version and push tag
      id: tag_version
      # uses: zwaldowski/semver-release-action@v1
      # with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      uses: mathieudutour/github-tag-action@v5.3
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}


    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - name: Get package version                 ## Semantic Version
      id: vars
      shell: bash
      run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=pkg_version::$(node -e "console.log(require('./package.json').version);")"
    - name: Add & Commit
      uses: EndBug/add-and-commit@v4.2.0
      with:
          add: "dist"
          force: true
          message: "Built ${{ steps.vars.outputs.sha_short }}"
          ref: "release/v${{ steps.vars.outputs.pkg_version }}"
          tag: "v${{ steps.vars.outputs.pkg_version }}"

    # - run: echo "${{ steps.next_version.outputs.version }}"
    # - run: |
    #     git add .
    #     git commit -m "Bump version"
    #     git push
    #     echo ::set-output name=sha::$(git rev-parse HEAD)
    # - uses: zwaldowski/semver-release-action@v1
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     sha: ${{ steps.git_commit.outputs.sha }}
    
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by Github Actions
    - run: npm test

  package:
    needs: [build]                                ## Code Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 15.x
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
      - run: npm ci
      - run: npm version prerelease --preid=ci-$GITHUB_RUN_ID --no-git-tag-version
      - run: npm pack

      - name: Installing Jfrog
        uses: jfrog/setup-jfrog-cli@v1
      - run: jfrog --version
      - run: jfrog rt c ci-userdetails --access-token ${{ secrets.ARTIFACTORY_TOKEN }} --url ${{ secrets.ARTIFACTORY_URL }} --interactive=false
      - run: tar -czf archive.tar.gz dist
      - run: jfrog rt u "*.gz" testnpm

###      - run: npm publish                       ## Publish Package to Artifactory
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
            name: package
            path: "*.tgz"

  sonarcloud:                                     ## SonarCloud Analysis
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Checkout
#         uses: actions/checkout@v2
#       -
#         name: Set up QEMU
#         uses: docker/setup-qemu-action@v1
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       -
#         name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
# #          username: ${{ secrets.DOCKERHUB_USERNAME }}
# #          password: ${{ secrets.DOCKERHUB_TOKEN }}

#       # -
#       #   name: Build and push
#       #   uses: docker/build-push-action@v2
#       #   with:
#       #     context: .
#       #     file: ./Dockerfile
#       #     push: true
#       #     tags: user/app:latest

#       - name: Build and push docker image
#         uses: elgohr/Publish-Docker-Github-Action@master
#         with:
#           name: ${{ secrets.DOCKERHUB_USERNAME }}/hello
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}